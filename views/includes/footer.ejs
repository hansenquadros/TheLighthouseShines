<style>
    .chat-btn {
        position: absolute;
        right: 14px;
        bottom: 30px;
        cursor: pointer
    }
    
    .chat-btn .close {
        display: none
    }
    
    .chat-btn i {
        transition: all 0.9s ease
    }
    
    #check:checked~.chat-btn i {
        display: block;
        pointer-events: auto;
        transform: rotate(180deg)
    }
    
    #check:checked~.chat-btn .comment {
        display: none
    }
    
    .chat-btn i {
        font-size: 22px;
        color: #fff !important
    }
    
    .chat-btn {
        width: 50px;
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50px;
        background-color: blue;
        color: #fff;
        font-size: 22px;
        border: none
    }
    
    .wrapper {
        position: fixed;
        right: 20px;
        bottom: 100px;
        width: 300px;
        background-color: #fff;
        border-radius: 5px;
        opacity: 0;
        transition: all 0.4s
    }
    
    #check:checked~.wrapper {
        opacity: 1
    }
    
    .chat-form {
        padding: 15px
    }
    
    .chat-form input,
    textarea,
    button {
        margin-bottom: 10px
    }
    
    .chat-form textarea {
        resize: none
    }
    
    .form-control:focus,
    .btn:focus {
        box-shadow: none
    }
    
    .btn,
    .btn:focus,
    .btn:hover {
        background-color: blue;
        border: blue
    }
    
    #check {
        display: none !important
    }
</style>

<footer>
    <div class="container">
        <div class="row">
            TheLightHouseShines &copy; <%= new Date().getFullYear() %>
        </div>
    </div>
</footer>
</div>

<div class="modal fade" id="replyModal" tabindex="-1" role="dialog" aria-hidden="true">
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Reply</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        <div class="modal-body">
            <form onsubmit="return doPostReply(this);">
                <input type="hidden" name="postId">
                <input type="hidden" name="commentId">
                <textarea name="reply" placeholder="Post your reply"></textarea>
                <button type="submit">Post</button>
            </form>
        </div>
    </div>
</div>
</div>

<script src="/public/js/jquery-3.3.1.min.js"></script>
<script src="/public/js/script.js"></script>
<script src="/public/js/main.min.js"></script>
<script src="/public/js/socket.io.js"></script>


<script>

window.user = null;

function getUser() {

    if (localStorage.getItem("accessToken")) {

        var ajax = new XMLHttpRequest();
        ajax.open("POST", "/getUser", true);

        ajax.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {

                var response = JSON.parse(this.responseText);

                if (response.status == "success") {
                    window.user = response.data;

                    if (typeof isUpdateProfile !== "undefined" && isUpdateProfile) {
                        showProfileData();
                    }

                    if (typeof isHomePage !== "undefined" && isHomePage) {
                        showAddPost();
                        showNewsfeed();
                    }

                    if (typeof isRightSidebar !== "undefined" && isRightSidebar) {
                        getMyPages();
                    }

                    if (typeof isSearchResults !== "undefined" && isSearchResults) {
                        showSearchResults();
                    }

                    if (typeof isFriends !== "undefined" && isFriends) {
                        showFriends();
                    }

                    if (typeof isPages !== "undefined" && isPages) {
                        getPages();
                    }

                    if (typeof isPageDetail !== "undefined" && isPageDetail) {
                        getPageDetail();
                    }

                    if (typeof isPostDetail !== "undefined" && isPostDetail) {
                        showPostDetails();
                    }

                    if (typeof isRightSidebar !== "undefined" && isRightSidebar) {
                        getMyPages();
                    }

                    if (typeof isGroups !== "undefined" && isGroups) {
                        getGroups();
                    }

                    if (typeof isGroupDetail !== "undefined" && isGroupDetail) {
                        getGroupDetail();
                    }

                    if (typeof isNotifications !== "undefined" && isNotifications) {
                        showNotifications();
                        markNotificationsAsRead();
                    } else {
                        var notificationsCount = 0;
                        for (var a = 0; a < window.user.notifications.length; a++) {
                            if (!window.user.notifications[a].isRead) {
                                notificationsCount++;
                            }
                        }
                        if (notificationsCount > 0) {
                            if(document.getElementById("notifications-badge")!=null)
                                document.getElementById("notifications-badge").innerHTML = "(" + notificationsCount + ")";
                        }
                    }

                } else {
                    localStorage.removeItem("accessToken");
                }
                showMainMenu();
            }
        };

        var formData = new FormData();
        formData.append("accessToken", localStorage.getItem("accessToken"));
        ajax.send(formData);
    } else {
        showMainMenu();
    }
}

function showMainMenu() {
    var html = "";

    if (localStorage.getItem("accessToken")) {
        html += '<li>';
            html += '<a href="/pages">Pages</a> ';
        html += '</li>';

        html += '<li>';
            html += '<a href="/groups">Groups</a> ';
        html += '</li>';

        html += '<li>';
            html += '<a href="/updateProfile">Profile</a>';
        html += '</li>';

        html += '<li>';
            html += '<a href="/logout" onclick="return doLogout();">Logout</a>';
        html += '</li>';
    } else {
        html += '<li>';
            html += '<a href="/login">Login</a>';
        html += '</li>';

        html += '<li>';
            html += '<a href="/signup">Signup</a>';
        html += '</li>';
    }

    document.getElementById("main-menu").innerHTML = html;
}

function doLogout() {
    localStorage.removeItem("accessToken");
    return true;
}

window.onload = function () {
    getUser();
};

window.onerror = function (file, line, error) {
    alert(file + " " + line + " " + error);
};
</script>

<input type="checkbox" id="check"> <label class="chat-btn" for="check" style="position: fixed; bottom: 10px; right: 5px;"> <i class="fa fa-commenting-o comment"></i> <i class="fa fa-close close"></i> </label>
<div class="wrapper">
    <iframe
    allow="microphone;"
    width="350"
    height="430"
    src="https://console.dialogflow.com/api-client/demo/embedded/6877314d-f1a4-4951-b94e-7c489b21d1dd">
</iframe>
</div>

</body>

</html>